-- checking matching of expressions
fun processA(x :: A(Int)) {
  case x of
      A (0) -> "1"
    | A (x) -> "2"
  esac
}

fun len(x) {
  -- @x(t) :: Union [Nil; Cons(t, x)]; -- хочется задавать рекурсивные типы примерно так, но пока что их нет
  x :: Union [Nil; Cons(?, ?)];
  case x of
     Nil -> 0
   | Cons (_, xs) -> len(xs)
  esac
}
Unit