-- check function casting (this may cause Cast- fail)
-- we would like smth like:
-- Cast(f, ?, Int->Str, +) @ "kek" -> Cast(f @ Cast("kek", Int, -), Str, +)
-- we would like to trigger Cast-

-- this function work is to convert integer to string
fun intStringer(x :: Int) {
  x.string
}
-- declare some dynamic variable:
local dyn :: ? = "This variable can take arbitrary value";
dyn := intStringer; -- intStringer forgets it's type information with this assignment here
dyn("input") -- so, this gives negative cast, i.e. context is blamed, which is string "input"